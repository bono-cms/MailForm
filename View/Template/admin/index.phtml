<?php

use Krystal\Form\Element;
use Krystal\Widget\GridView\GridViewWidget;
use MailForm\Collection\FormTypeCollection;
use Cms\View\Icon;

defined('KRYSTAL') or die;

?>

<div class="btn-toolbar">
    <?php $this->loadPartial('menu', array(
        'items' => array(
            'MailForm:Admin:Form@addAction' => 'Add new form',
            'MailForm:Admin:Form@addAjaxAction' => 'Add new AJAX form',
            'MailForm:Admin:SubmitLog@indexAction' => 'Submit logs'
        ),
        'actions' => array(
            'data' => $forms,
            'save' => 'MailForm:Admin:Form@tweakAction',
            'delete' => 'MailForm:Admin:Form@deleteAction'
        )
    )); ?>
</div>

<div class="card">
    <h4 class="inline"><i class="glyphicon glyphicon-th-list"></i> <?php $this->show('Mail forms'); ?></h4>

    <form autocomplete="off">
        <div class="table-responsive">
            <?= $this->widget(new GridViewWidget($forms, array(
                // A column to be considered as a primary key
                'pk' => 'id',
                'batch' => true,
                'tableClass' => 'table table-hover table-bordered table-striped table-sm',
                'columns' => array(
                    array(
                        'column' => 'id',
                        'label' => '#'
                    ),

                    array(
                        'column' => 'name'
                    ),

                    array(
                        'column' => 'type',
                        'translateable' => true,
                        'value' => function($row){
                            $typeCol = new FormTypeCollection();
                            return $typeCol->findByKey($row['type']);
                        }
                    ),

                    array(
                        'column' => 'seo',
                        'label' => 'SEO',
                        'value' => function($form){
                            if ($form->isRegularForm()) {
                                return Element::checkbox(sprintf('seo[%s]', $form->getId()), $form->getSeo());
                            } else {
                                return null;
                            }
                        }
                    ),

                    array(
                        'column' => 'field_count',
                        'label' => 'Field count'
                    )
                ),

                'actions' => array(
                    'view' => function($form){
                        if ($form->isRegularForm()) {
                            return Icon::view($form->getUrl(), $this->translate('View this page on site'));
                        } else {
                            return null;
                        }
                    },

                    'edit' => function($form){
                        return Icon::edit(
                            $this->url('MailForm:Admin:Form@editAction', $form->getId()),
                            $this->translate('Edit this page')
                        );
                    },

                    'remove' => function($form){
                        return Icon::remove(
                            $this->url('MailForm:Admin:Form@deleteAction', $form->getId()),
                            $this->translate('Remove this page')
                        );
                    }
                )
            ))); ?>    

            <?php if (empty($forms)): ?>
            <div class="center-block">
                <h2 class="text-center text-muted"><i class="glyphicon glyphicon-remove"></i> <?php $this->show('No forms'); ?></h2>
            </div>
            <?php endif; ?>
        </div>
    </form>

    <?php $this->loadPartial('paginator'); ?>
</div>
